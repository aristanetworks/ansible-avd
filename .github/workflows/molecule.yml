name: Ansible Molecule
on:
  push:
    branches:
      - devel
  pull_request:
    paths:
      - 'ansible_collections/arista/avd/roles/**'
      - 'ansible_collections/arista/avd/molecules/**'
      - 'development/requirements**'
jobs:
  molecule:
    runs-on: ubuntu-latest
    env:
      PY_COLORS: 1 # allows molecule colors to be passed to GitHub Actions
      ANSIBLE_FORCE_COLOR: 1 # allows ansible colors to be passed to GitHub Actions
    strategy:
      fail-fast: true
      matrix:
        avd_scenario:
          - 'avd-l3ls-ebgp'
          - 'avd-l3ls-ebgp-json'
          - 'avd-l3ls-isis'
          - 'avd-l3ls-server-connections'
          - 'eos_l3ls_evpn-topology-route-server'
          - 'eos-cli-config-gen'
          - 'v1.0_to_v1.1'
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r development/requirements.txt
          pip install -r development/requirements-dev.txt

      - name: Execute molecule
        run: |
          cd ansible_collections/arista/avd
          molecule test --destroy=never  --scenario-name ${{ matrix.avd_scenario }}
          ls -alR molecule

      - name: Test molecule results
        run: |
          pwd
          cd ansible_collections/arista/avd/
          ls -alR

      - uses: actions/upload-artifact@v1
        with:
          name: molecule-results-${{ matrix.avd_scenario }}
          path: ansible_collections/arista/avd/molecule/${{ matrix.avd_scenario }}
