name: Ansible Molecule
on:
  push:
    branches:
      - devel
  pull_request:
    paths:
      - 'ansible_collections/arista/avd/roles/**'
      - 'ansible_collections/arista/avd/molecules/**'
      - 'development/requirements**'
      - '.github/workflows/molecule.yml'
jobs:
  molecule_stable:
    name: "Molecule Stable"
    runs-on: ubuntu-latest
    # Deactivated as per GH changes
    # env:
    #   PY_COLORS: 1 # allows molecule colors to be passed to GitHub Actions
    #   ANSIBLE_FORCE_COLOR: 1 # allows ansible colors to be passed to GitHub Actions
    strategy:
      fail-fast: true
      matrix:
        python_version: [ 3.6 ]
        avd_scenario:
          - 'avd-l3ls-ebgp'
          - 'avd-l3ls-ebgp-json'
          - 'avd-l3ls-isis'
          - 'avd-l3ls-server-connections'
          - 'eos-cli-config-gen'
          - 'v1.0_to_v1.1'
    steps:
      - name: 'set environment variables'
        run: |
          echo "PY_COLORS=1" >> $GITHUB_ENV
          echo "ANSIBLE_FORCE_COLOR=1" >> $GITHUB_ENV

      - uses: actions/checkout@v1

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r development/requirements.txt
          pip install -r development/requirements-dev.txt

      - name: Execute molecule
        run: |
          cd ansible_collections/arista/avd
          molecule test --destroy=never  --scenario-name ${{ matrix.avd_scenario }}
          ls -alR molecule

      - name: Test molecule results
        run: |
          pwd
          cd ansible_collections/arista/avd/
          ls -alR

      - uses: actions/upload-artifact@v1
        with:
          name: molecule-results--py${{ matrix.python_version }}-${{ matrix.avd_scenario }}
          path: ansible_collections/arista/avd/molecule/${{ matrix.avd_scenario }}
