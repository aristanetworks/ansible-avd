{# Spine Switch Configuration #}
## Ansible Generated ##

### {{ inventory_hostname }} ###

{# Set Spine Variables #}
{% set switch = namespace() %}
{% set switch.platform = evpn_controller.platform %}
{% set switch.mgmt_ip = evpn_controller.nodes[inventory_hostname].mgmt_ip %}
{% set switch.spanning_tree_mode = "none" %}
{% for node in evpn_controller.nodes | arista.avd.natural_sort %}
{%    if node == inventory_hostname %}
{%        set switch.id = evpn_controller.nodes[node].id %}
{# Get local RR/RS interface to configure #}
{%        if evpn_controller.nodes[node].uplink_to_remote_switches is defined %}
{%            set switch.uplink_to_remote_switches = evpn_controller.nodes[node].uplink_to_remote_switches %}
{%        else %}
{%            set switch.uplink_to_remote_switches = evpn_controller.defaults.uplink_to_remote_switches %}
{%        endif %}
{# Get remote switch interface to configure #}
{%        if evpn_controller.nodes[node].remote_switches_interfaces is defined %}
{%            set switch.remote_switches_interfaces = evpn_controller.nodes[node].remote_switches_interfaces %}
{%        endif %}
{# Get remote hostname #}
{%        if evpn_controller.nodes[node].remote_switches is defined %}
{%            set switch.remote_switches = evpn_controller.nodes[node].remote_switches %}
{%        else %}
{%            set switch.remote_switches = evpn_controller.defaults.remote_switches %}
{%        endif %}
{# Get group of remote devices where RS/RR are connected #}
{%        if evpn_controller.nodes[node].remote_switches_group is defined %}
{%            set switch.remote_switches_group = evpn_controller.nodes[node].remote_switches_group %}
{%        else %}
{%            set switch.remote_switches_group = evpn_controller.defaults.remote_switches_group %}
{%        endif %}
{%    endif %}
{% endfor %}

### Spine Info ###
switch_platform: {{ switch.platform }}
switch_mgmt_ip: {{ switch.mgmt_ip }}

{# routing protocol model multi-agent needed for EVPN address family #}
service_routing_protocols_model: multi-agent
ip_routing: true

{# Hardware Counter #}
### Hardware Counters
hardware_counters:
{% include 'base/hardware-counters.j2' %}

{# Daemon TerminAttr #}
### Daemon TerminAttr
daemon_terminattr:
{% include 'base/daemon-terminattr.j2' %}

{# vlan allocation policy #}
vlan_internal_order:
{% include 'base/vlan-internal-order.j2' %}

{# event monitor #}
### Event Monitor ###
event_monitor:
{% include 'base/event-monitor.j2' %}

{# event handler #}
### Event Handler ###
event_handlers:
{% include 'base/event-handler.j2' %}

{# load interval #}
### Load Interval ###
load_interval:
{% include 'base/load-interval.j2' %}

{# queue monitor length #}
### Queue Monitor Lenght ###
queue_monitor_length:
{% include 'base/queue-monitor-length.j2' %}

{# logging #}
### Logging ###
logging:
{% include 'base/logging.j2' %}

{# name servers #}
### Name Servers ###
name_server:
{% include 'base/name-servers.j2' %}

{# NTP servers #}
### NTP Servers ###
ntp_server:
{% include 'base/ntp-servers.j2' %}

{# redundancy #}
### Redundancy ###
redundancy:
{% include 'base/redundancy.j2' %}

{# spanning-tree #}
### Spanning-tree ###
spanning_tree:
{% include 'base/spanning-tree.j2' %}

{# unsupported transceiver #}
{% include 'base/unsupported-transeiver.j2' %}

{# aaa authorization #}
### AAA authorization ###
aaa_authorization:
{% include 'base/aaa-authorization.j2' %}

{# local users #}
### local users ###
local_users:
{% include 'base/local-users.j2' %}

{# clock timezone #}
### Clock Timezone ###
clock:
{% include 'base/clock-timezone.j2' %}

{# bfd multihop #}
### bfd multihop ###
bfd_multihop:
{% include 'base/bfd-multihop.j2' %}

{# Ethernet Interfaces #}
### Ethernet Interfaces ###
ethernet_interfaces:
{% include 'evpn-controller/evpn-controller-ethernet-uplinks.j2' %}

{# loopback interfaces #}
### Loopback Interfaces ###
loopback_interfaces:
{# overlay peering interface #}
{% include 'evpn-controller/evpn-controller-overlay-loopback.j2'%}
{# intentional blank line #}

{# Management Interfaces #}
### Management Interfaces ###
management_interfaces:
{% include 'base/mgmt-interface.j2' %}

{# TCAM Profiles #}
### TCAM Profiles ###
tcam_profile:
{% include 'base/tcam-profile.j2' %}

{# mac address-table #}
### MAC address table ###
mac_address_table:
{% include 'base/mac-address-table.j2' %}

{# static_routes #}
### static routes ###
static_routes:
{% include 'routing/static-routes.j2' %}

{# prefix_lists #}
### prefix-lists ###
prefix_lists:
{# {% include 'underlay-overlay/leaf-prefix-lists.j2' %} #}

{# OSPF Configurartion #}
### Routing - OSPF ###
router_ospf:
{# underlay #}
{% include 'underlay-overlay/router-ospf.j2' %}

{# OSPF Configurartion #}
### Routing - ISIS ###
router_isis:
{# underlay #}
{% include 'underlay-overlay/router-isis.j2' %}

{# queue monitor streaming #}
### Queue Monitor Streaming ###
queue_monitor_streaming:
{% include 'base/queue-monitor-streaming.j2' %}

{# management api http #}
### Management API http ###
management_api_http:
{% include 'base/management-api-http.j2' %}
