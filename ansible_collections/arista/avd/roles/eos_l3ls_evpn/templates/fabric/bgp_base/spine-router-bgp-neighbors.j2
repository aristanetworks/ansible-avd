{# Spine router bgp neighbors configuration #}
{% if type == "spine" %}
{%     for l3leaf_node_group in l3leaf.node_groups | arista.avd.natural_sort %}
{%         if l3leaf.node_groups[l3leaf_node_group].spines is defined %}
{%             set leaf_spines = l3leaf.node_groups[l3leaf_node_group].spines %}
{%         else %}
{%             set leaf_spines = l3leaf.defaults.spines %}
{%         endif %}
{%         for node in l3leaf.node_groups[l3leaf_node_group].nodes | arista.avd.natural_sort %}
{# Underlay network peering #}
{%             if switch.underlay_routing_protocol == "ebgp" %}
{%                 for leaf_spine in leaf_spines %}
{%                     if leaf_spine == inventory_hostname %}
    {{ underlay_p2p_network_summary | ipaddr('network') | ipmath(((l3leaf.node_groups[l3leaf_node_group].nodes[node].id -1) * 2 * spine.nodes | length * max_l3leaf_to_spine_links ) + loop.index0 * 2 + 1) }}:
      peer_group: IPv4-UNDERLAY-PEERS
{%                         if l3leaf.node_groups[l3leaf_node_group].bgp_as is defined %}
      remote_as: {{ l3leaf.node_groups[l3leaf_node_group].bgp_as }}
{%                         else %}
      remote_as: {{ l3leaf.defaults.bgp_as }}
{%                         endif %}
{%                     endif %}
{%                 endfor %}
{%              endif %}
{# Overlay network peering #}
{%             if switch.overlay_routing_protocol == 'ebgp' %}
    {{ overlay_loopback_network_summary | ipaddr('network') | ipmath(l3leaf.node_groups[l3leaf_node_group].nodes[node].id + spine.nodes | length ) }}:
      peer_group: EVPN-OVERLAY-PEERS
{%                     if l3leaf.node_groups[l3leaf_node_group].bgp_as is defined %}
      remote_as: {{ l3leaf.node_groups[l3leaf_node_group].bgp_as }}
{%                     else %}
      remote_as: {{ l3leaf.defaults.bgp_as }}
{%                     endif %}
{%             endif %}
{%             if switch.overlay_routing_protocol == 'ibgp' and switch.is_route_reflector == true %}
    {{ overlay_loopback_network_summary | ipaddr('network') | ipmath(l3leaf.node_groups[l3leaf_node_group].nodes[node].id + spine.nodes | length ) }}:
      peer_group: EVPN-OVERLAY-PEERS
      remote_as: {{ bgp_as }}
{%             endif %}
{%         endfor %}
{%     endfor %}
{% endif %}
{# Underlay network peering to super spines #}
{% set a_spine = namespace() %}
{# find maximum underlay pool size as it will be later devided by max number of sup spines and pods #}
{# that allows changes in network setup, but pool must not be changed to avoid changing p2p addresses #}
{% set a_spine.max_hosts_in_subnet = super_spine_underlay_p2p_network_summary | ipaddr('size') %}
{# walk over spine ports defined as connections to super-spine #}
{% for port_name in spine['uplinks_to_super_spine_interfaces'] %}
    {{ super_spine_underlay_p2p_network_summary | ipaddr('network') | ipmath(
            ((a_spine.max_hosts_in_subnet / max_super_spines) / max_pods)|int * (pod_number-1) + loop.index0 * 2
      ) }}:
      peer_group: IPv4-UNDERLAY-PEERS
      remote_as: {{ super_spine.bgp_as }}
{% endfor %}
