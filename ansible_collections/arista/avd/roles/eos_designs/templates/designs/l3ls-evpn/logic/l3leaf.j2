{# set leaf variables #}
{# Set switch.underlay_routing_protocol using external logic template #}
{% include 'logic/switch-underlay-routing-protocol.j2' %}
{# Set switch.overlay_routing_protocol using external logic template #}
{% include 'logic/switch-overlay-routing-protocol.j2' %}
{% for l3leaf_node_group in l3leaf.node_groups | arista.avd.natural_sort %}
{%     for node in l3leaf.node_groups[l3leaf_node_group].nodes | arista.avd.natural_sort %}
{%         if node == inventory_hostname %}
{%             set leaf.group = l3leaf_node_group %}
{%             set leaf.id = l3leaf.node_groups[l3leaf_node_group].nodes[node].id %}
{%             set switch.mgmt_ip = l3leaf.node_groups[l3leaf_node_group].nodes[node].mgmt_ip %}
{%             set leaf.spine_interfaces = l3leaf.node_groups[l3leaf_node_group].nodes[node].spine_interfaces %}
{%             if l3leaf.node_groups[l3leaf_node_group].filter.tenants is defined %}
{%                 set leaf.filter_tenants = l3leaf.node_groups[l3leaf_node_group].filter.tenants %}
{%             elif l3leaf.defaults.filter.tenants is defined %}
{%                 set leaf.filter_tenants = l3leaf.defaults.filter.tenants %}
{%             else %}
{%                 set leaf.filter_tenants = [ 'all' ] %}
{%             endif %}
{%             if l3leaf.node_groups[l3leaf_node_group].igmp_snooping_enabled is defined %}
{%                 set leaf.igmp_snooping_enabled = l3leaf.node_groups[l3leaf_node_group].igmp_snooping_enabled %}
{%             elif l3leaf.defaults.igmp_snooping_enabled is defined %}
{%                 set leaf.igmp_snooping_enabled = l3leaf.defaults.igmp_snooping_enabled %}
{%             else %}
{%                 set leaf.igmp_snooping_enabled = default_igmp_snooping_enabled %}
{%             endif %}
{%             if l3leaf.node_groups[l3leaf_node_group].filter.tags is defined %}
{%                 set leaf.filter_tags = l3leaf.node_groups[l3leaf_node_group].filter.tags %}
{%             elif l3leaf.defaults.filter.tags is defined %}
{%                 set leaf.filter_tags = l3leaf.defaults.filter.tags %}
{%             else %}
{%                 set leaf.filter_tags = [ 'all' ] %}
{%             endif %}
{%             if l3leaf.node_groups[l3leaf_node_group].spines is defined %}
{%                 set leaf.spines = l3leaf.node_groups[l3leaf_node_group].spines %}
{%             else %}
{%                 set leaf.spines = l3leaf.defaults.spines %}
{%             endif %}
{%             if l3leaf.node_groups[l3leaf_node_group].uplink_to_spine_interfaces is defined %}
{%                 set leaf.uplink_to_spine_interfaces = l3leaf.node_groups[l3leaf_node_group].uplink_to_spine_interfaces %}
{%             else %}
{%                 set leaf.uplink_to_spine_interfaces = l3leaf.defaults.uplink_to_spine_interfaces %}
{%             endif %}
{%             if l3leaf.node_groups[l3leaf_node_group].p2p_link_interface_speed is defined %}
{%                 set leaf.p2p_link_interface_speed = l3leaf.node_groups[l3leaf_node_group].p2p_link_interface_speed %}
{%             elif l3leaf.defaults.p2p_link_interface_speed is defined %}
{%                 set leaf.p2p_link_interface_speed = l3leaf.defaults.p2p_link_interface_speed %}
{%             endif %}
{%             if l3leaf.node_groups[l3leaf_node_group].platform is defined %}
{%                 set switch.platform = l3leaf.node_groups[l3leaf_node_group].platform %}
{%             else %}
{%                 set switch.platform = l3leaf.defaults.platform %}
{%             endif %}
{%             if bgp_as is arista.avd.defined and switch.overlay_routing_protocol == 'ibgp' %}
{%                  set switch.bgp_as = bgp_as %}
{%             elif l3leaf.node_groups[l3leaf_node_group].nodes[node].bgp_as is defined %}
{%                 set switch.bgp_as = l3leaf.node_groups[l3leaf_node_group].nodes[node].bgp_as %}
{%             elif l3leaf.node_groups[l3leaf_node_group].bgp_as is defined %}
{%                 set switch.bgp_as = l3leaf.node_groups[l3leaf_node_group].bgp_as %}
{%             elif l3leaf.defaults.bgp_as is defined %}
{%                 set switch.bgp_as = l3leaf.defaults.bgp_as %}
{%             endif %}
{%             set switch.router_id = overlay_loopback_network_summary | ipaddr('network') | ipmath(leaf.id + spine.nodes | length) %}
{%             set switch.bgp_defaults = leaf_bgp_defaults | arista.avd.default([]) %}
{%             if l3leaf.node_groups[l3leaf_node_group].virtual_router_mac_address is defined %}
{%                 set leaf.virtual_router_mac_address = l3leaf.node_groups[l3leaf_node_group].virtual_router_mac_address %}
{%             else %}
{%                 set leaf.virtual_router_mac_address = l3leaf.defaults.virtual_router_mac_address %}
{%             endif %}
{%             if l3leaf.node_groups[l3leaf_node_group].spanning_tree_mode is defined %}
{%                 set switch.spanning_tree_mode = l3leaf.node_groups[l3leaf_node_group].spanning_tree_mode %}
{%             else %}
{%                 set switch.spanning_tree_mode = l3leaf.defaults.spanning_tree_mode %}
{%             endif %}
{%             if l3leaf.node_groups[l3leaf_node_group].spanning_tree_priority is defined %}
{%                 set switch.spanning_tree_priority = l3leaf.node_groups[l3leaf_node_group].spanning_tree_priority %}
{%             else %}
{%                 set switch.spanning_tree_priority = l3leaf.defaults.spanning_tree_priority %}
{%             endif %}
{%             if l3leaf.node_groups[l3leaf_node_group].mlag is defined %}
{%                 set switch.mlag = l3leaf.node_groups[l3leaf_node_group].mlag %}
{%             else %}
{%                 set switch.mlag = l3leaf.defaults.mlag | default(true) %}
{%             endif %}
{%             set leaf.mlag_ibgp_origin_incomplete = l3leaf.node_groups[l3leaf_node_group].mlag_ibgp_origin_incomplete | arista.avd.default(l3leaf.defaults.mlag_ibgp_origin_incomplete, true) %}
{%             if loop.length == 2 and switch.mlag == true %}
{%                 set leaf.mlag = true %}
{%                 set leaf.mlag_group = l3leaf_node_group %}
{%                 if l3leaf.node_groups[l3leaf_node_group].mlag_dual_primary_detection is defined %}
{%                     set leaf.mlag_dual_primary_detection = l3leaf.node_groups[l3leaf_node_group].mlag_dual_primary_detection %}
{%                 elif l3leaf.defaults.mlag_dual_primary_detection is defined %}
{%                     set leaf.mlag_dual_primary_detection = l3leaf.defaults.mlag_dual_primary_detection %}
{%                 else %}
{%                     set leaf.mlag_dual_primary_detection = false %}
{%                 endif %}
{%                 if l3leaf.node_groups[l3leaf_node_group].mlag_interfaces is defined %}
{%                     set leaf.mlag_interfaces = l3leaf.node_groups[l3leaf_node_group].mlag_interfaces %}
{%                 else %}
{%                     set leaf.mlag_interfaces = l3leaf.defaults.mlag_interfaces %}
{%                 endif %}
{%                 if loop.index == 1 %}
{%                     set leaf.mlag_role = "primary" %}
{%                     set leaf.mlag_peer = loop.nextitem %}
{%                     set leaf.mlag_ip = (( l3leaf.node_groups[l3leaf_node_group].nodes[node].id -1 ) * 2 ) %}
{%                     set leaf.mlag_peer_ip = ((( l3leaf.node_groups[l3leaf_node_group].nodes[node].id -1 ) * 2 ) + 1 ) %}
{%                     set leaf.mlag_peer_id = l3leaf.node_groups[l3leaf_node_group].nodes[loop.nextitem].id %}
{%                     set leaf.mlag_peer_mgmt_ip = l3leaf.node_groups[l3leaf_node_group].nodes[loop.nextitem].mgmt_ip | ipaddr('address') %}
{%                 elif loop.index == 2 %}
{%                     set leaf.mlag_role = "secondary" %}
{%                     set leaf.mlag_peer = loop.previtem %}
{%                     set leaf.mlag_ip = ((( l3leaf.node_groups[l3leaf_node_group].nodes[loop.previtem].id -1 ) * 2 ) +1 ) %}
{%                     set leaf.mlag_peer_ip = (( l3leaf.node_groups[l3leaf_node_group].nodes[loop.previtem].id -1 ) * 2 )  %}
{%                     set leaf.mlag_peer_id = l3leaf.node_groups[l3leaf_node_group].nodes[loop.previtem].id  %}
{%                     set leaf.mlag_peer_mgmt_ip = l3leaf.node_groups[l3leaf_node_group].nodes[loop.previtem].mgmt_ip | ipaddr('address')  %}
{%                 endif %}
{%             else %}
{%                 set leaf.mlag = false %}
{%             endif %}
{%             if l3leaf.node_groups[l3leaf_node_group].evpn_services_l2_only is defined %}
{%                 set leaf.evpn_services_l2_only = l3leaf.node_groups[l3leaf_node_group].evpn_services_l2_only %}
{%             else %}
{%                 set leaf.evpn_services_l2_only = l3leaf.defaults.evpn_services_l2_only | default(false) %}
{%             endif %}
{#             Logic for EVPN Role for Overlay BGP Peerings #}
{#             For l3leaf the default value is client #}
{%             set switch.evpn_role = l3leaf.node_groups[l3leaf_node_group].evpn_role | arista.avd.default(
                                      l3leaf.defaults.evpn_role,
                                      'client') %}
{#             For l3leaf the default value for EVPN Route Servers is content of the spines variable set above. For safety we fall back to [] #}
{%             set switch.raw_evpn_route_servers = l3leaf.node_groups[l3leaf_node_group].evpn_route_servers | arista.avd.default(
                                      l3leaf.defaults.evpn_route_servers,
                                      leaf.spines,
                                      []) %}
{%         endif %}
{%     endfor %}
{% endfor %}
{# Set switch.evpn_route_servers using external logic template #}
{% include 'designs/l3ls-evpn/logic/switch-evpn-route-servers.j2' %}
{# Set switch.evpn_route_clients using external logic template #}
{% include 'designs/l3ls-evpn/logic/switch-evpn-route-clients.j2' %}
{# set leaf allowed vrfs, svis and vlans #}
{% set leaf.vrfs = []  %}
{% set leaf.svis = []  %}
{% set leaf.vlans = []  %}
{% for tenant in tenants | arista.avd.natural_sort if tenant in leaf.filter_tenants or "all" in leaf.filter_tenants %}
{%     if tenants[tenant].vrfs is defined %}
{%         for vrf in tenants[tenant].vrfs | arista.avd.natural_sort %}
{%             for svi in tenants[tenant].vrfs[vrf].svis | arista.avd.natural_sort %}
{%                 for svi_tag in tenants[tenant].vrfs[vrf].svis[svi].tags %}
{%                     if svi_tag in leaf.filter_tags or svi_tag == leaf.group or "all" in leaf.filter_tags %}
{%                         do leaf.vrfs.append( vrf ) %}
{%                         do leaf.svis.append( svi | int) %}
{%                         do leaf.vlans.append( svi | int) %}
{%                         break %}
{%                     endif %}
{%                 endfor %}
{%             endfor %}
{%         endfor %}
{%     endif %}
{%     if tenants[tenant].l2vlans is defined %}
{%         for l2vlan in tenants[tenant].l2vlans | arista.avd.natural_sort %}
{%             for vlan_tag in tenants[tenant].l2vlans[l2vlan].tags %}
{%                 if vlan_tag in leaf.filter_tags or vlan_tag == leaf.group or "all" in leaf.filter_tags %}
{%                     do leaf.vlans.append( l2vlan | int) %}
{%                     break %}
{%                 endif %}
{%             endfor %}
{%         endfor %}
{%     endif %}
{% endfor %}
{% set leaf.vrfs = leaf.vrfs | unique  %}
{# Setting tenant static routes #}
{% set leaf.static_routes = [] %}
{% for tenant in tenants | arista.avd.natural_sort if tenant in leaf.filter_tenants or "all" in leaf.filter_tenants %}
{%     if tenants[tenant].vrfs is arista.avd.defined %}
{%         for vrf in tenants[tenant].vrfs if vrf in leaf.vrfs %}
{%             if tenants[tenant].vrfs[vrf].static_routes is arista.avd.defined %}
{%                 for static_route in tenants[tenant].vrfs[vrf].static_routes %}
{%                     if static_route.nodes is not arista.avd.defined or inventory_hostname in static_route.nodes %}
{%                         set entry = static_route %}
{%                         do entry.update( {'vrf':vrf} )%}
{%                         if entry.nodes is arista.avd.defined %}
{%                             do entry.pop( 'nodes' ) %}
{%                         endif %}
{%                         do leaf.static_routes.append( entry )%}
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%         endfor %}
{%     endif %}
{% endfor %}
{# Checking for BGP peers inside tenant VRFs #}
{% set leaf.has_tenant_bgp_peers = false %}
{% for tenant in tenants | arista.avd.natural_sort if tenant in leaf.filter_tenants or "all" in leaf.filter_tenants %}
{%     if tenants[tenant].vrfs is arista.avd.defined %}
{%         for vrf in tenants[tenant].vrfs if vrf in leaf.vrfs %}
{%             if tenants[tenant].vrfs[vrf].bgp_peers is arista.avd.defined %}
{%                 for bgp_peer in tenants[tenant].vrfs[vrf].bgp_peers %}
{%                     if tenants[tenant].vrfs[vrf].bgp_peers[bgp_peer].nodes is arista.avd.defined %}
{%                         if inventory_hostname in tenants[tenant].vrfs[vrf].bgp_peers[bgp_peer].nodes %}
{%                             set leaf.has_tenant_bgp_peers = true %}
{%                             break %}
{%                         endif %}
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%         endfor %}
{%     endif %}
{% endfor %}
{# Setting evpn_rd_admin_subfield #}
{% set leaf.evpn_rd_admin_subfield = overlay_loopback_network_summary | ipaddr('network') | ipmath(leaf.id + spine.nodes | length) %}
{% if evpn_rd_type is defined and evpn_rd_type is not none %}
{%     if evpn_rd_type.admin_subfield is defined and evpn_rd_type.admin_subfield is not none %}
{%         if evpn_rd_type.admin_subfield == "vtep_loopback" %}
{%             if leaf.mlag == true and leaf.mlag_role == "primary" %}
{%                 set leaf.evpn_rd_admin_subfield = vtep_loopback_network_summary | ipaddr('network') | ipmath(leaf.id + spine.nodes | length) %}
{%             elif leaf.mlag == true and leaf.mlag_role == "secondary" %}
{%                 set leaf.evpn_rd_admin_subfield = vtep_loopback_network_summary | ipaddr('network') | ipmath(leaf.mlag_peer_id + spine.nodes | length) %}
{%             else %}
{%                 set leaf.evpn_rd_admin_subfield = vtep_loopback_network_summary | ipaddr('network') | ipmath(leaf.id + spine.nodes | length) %}
{%             endif %}
{%         elif evpn_rd_type.admin_subfield == "leaf_asn" %}
{%             set leaf.evpn_rd_admin_subfield = switch.bgp_as %}
{%         elif evpn_rd_type.admin_subfield == "spine_asn" %}
{%             set leaf.evpn_rd_admin_subfield = spine.bgp_as %}
{%         elif evpn_rd_type.admin_subfield | ipaddr %}
{%             set leaf.evpn_rd_admin_subfield = evpn_rd_type.admin_subfield %}
{%         elif evpn_rd_type.admin_subfield is number and evpn_rd_type.admin_subfield >= 0 and evpn_rd_type.admin_subfield <= 4294967295 %}
{%             set leaf.evpn_rd_admin_subfield = evpn_rd_type.admin_subfield %}
{%         endif %}
{%     endif %}
{% endif %}
{# Setting evpn_rt_admin_subfield #}
{% set leaf.evpn_rt_admin_subfield = false %}
{% if evpn_rt_type is defined and evpn_rt_type is not none %}
{%     if evpn_rt_type.admin_subfield is defined and evpn_rt_type.admin_subfield is not none %}
{%         if evpn_rt_type.admin_subfield == "leaf_asn" %}
{%             set leaf.evpn_rt_admin_subfield = switch.bgp_as %}
{%         elif evpn_rt_type.admin_subfield == "spine_asn" %}
{%             set leaf.evpn_rt_admin_subfield = spine.bgp_as %}
{%         elif evpn_rt_type.admin_subfield is number and evpn_rt_type.admin_subfield >= 0 and evpn_rt_type.admin_subfield <= 4294967295 %}
{%             set leaf.evpn_rt_admin_subfield = evpn_rt_type.admin_subfield %}
{%         endif %}
{%     endif %}
{% endif %}
{# Set switch.l3_edge_* variables using external logic template #}
{% include 'l3_edge/logic/switch-l3-edge.j2' %}