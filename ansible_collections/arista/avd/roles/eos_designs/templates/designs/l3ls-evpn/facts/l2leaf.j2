{# set switch variables for l2leaf #}
switch:
{% for l2leaf_node_group in l2leaf.node_groups | arista.avd.natural_sort %}
{%     for node in l2leaf.node_groups[l2leaf_node_group].nodes | arista.avd.natural_sort %}
{%         if node == inventory_hostname %}

{# switch.group #}
  group: {{ l2leaf_node_group }}

{# switch.id #}
{%             set switch_id = l2leaf.node_groups[l2leaf_node_group].nodes[node].id %}
  id: {{ switch_id }}

{# switch.mgmt_ip #}
  mgmt_ip: {{ l2leaf.node_groups[l2leaf_node_group].nodes[node].mgmt_ip }}

{# switch.spanning_tree_mode #}
  spanning_tree_mode: {{ l2leaf.node_groups[l2leaf_node_group].spanning_tree_mode | arista.avd.default(
                         l2leaf.defaults.spanning_tree_mode ) }}

{# switch.igmp_snooping_enabled #}
  igmp_snooping_enabled: {{ l2leaf.node_groups[l2leaf_node_group].igmp_snooping_enabled | arista.avd.default(
                            l2leaf.defaults.igmp_snooping_enabled,
                            default_igmp_snooping_enabled ) }}

{# switch.spanning_tree_priority #}
  spanning_tree_priority: {{ l2leaf.node_groups[l2leaf_node_group].spanning_tree_priority | arista.avd.default(
                             l2leaf.defaults.spanning_tree_priority ) }}

{# switch.platform #}
  platform: {{ l2leaf.node_groups[l2leaf_node_group].platform | arista.avd.default(
               l2leaf.defaults.platform ) }}

{# switch.rack #}
  rack: {{ l2leaf.node_groups[l2leaf_node_group].nodes[node].rack | arista.avd.default(
           l2leaf.node_groups[l2leaf_node_group].rack,
           l2leaf.defaults.rack ) }}

{# switch.configure_tenants #}
  configure_tenants: true

{# switch.filter_tenants #}
{%             set switch_filter_tenants = l2leaf.node_groups[l2leaf_node_group].filter.tenants | arista.avd.default(
                                           l2leaf.defaults.filter.tenants,
                                           [ 'all' ]) %}
  filter_tenants: {{ switch_filter_tenants }}

{# switch.filter_tags #}
{%             set switch_filter_tags = l2leaf.node_groups[l2leaf_node_group].filter.tags | arista.avd.default(
                  l2leaf.defaults.filter.tags,
                  [ 'all' ]) %}
  filter_tags: {{ switch_filter_tags }}

{# switch.parent_l3leafs #}
{%             set switch_parent_l3leafs = l2leaf.node_groups[l2leaf_node_group].parent_l3leafs | arista.avd.default(
                                           l2leaf.defaults.parent_l3leafs) %}
  parent_l3leafs: {{ switch_parent_l3leafs }}

{# switch.inband_management_ip and switch.inband_management_interface #}
{%             if l2leaf_inband_management_subnet is arista.avd.defined %}
  inband_management_ip: {{ l2leaf_inband_management_subnet | ipaddr('network') | ipmath(3 + switch_id) }}/{{ l2leaf_inband_management_subnet | ipaddr('prefix') }}
  inband_management_interface: Vlan{{ l2leaf_inband_management_vlan|arista.avd.default('4092') }}
{%             endif %}

{# switch.mlag* #}
{%             set mlag = l2leaf.node_groups[l2leaf_node_group].mlag | arista.avd.default(
                                 l2leaf.defaults.mlag,
                                 true ) %}

{%             if loop.length == 2 and mlag == true %}
  mlag: true
  mlag_group: {{ l2leaf_node_group }}
  mlag_peer_vlan: {{ l2leaf.node_groups[l2leaf_node_group].mlag_peer_vlan | arista.avd.default(
                     l2leaf.defaults.mlag_peer_vlan,
                     4094) }}
  mlag_dual_primary_detection: {{ l2leaf.node_groups[l2leaf_node_group].mlag_dual_primary_detection | arista.avd.default(
                                  l2leaf.defaults.mlag_dual_primary_detection,
                                  false ) }}
  mlag_interfaces: {{ l2leaf.node_groups[l2leaf_node_group].mlag_interfaces | arista.avd.default(
                      l2leaf.defaults.mlag_interfaces ) }}
  mlag_peer_vlan: {{ l2leaf.node_groups[l2leaf_node_group].mlag_peer_vlan | arista.avd.default(
                     l2leaf.defaults.mlag_peer_vlan,
                     4094) }}
{%                 if loop.index == 1 %}
  mlag_role: "primary"
  mlag_peer: {{ loop.nextitem }}
  mlag_ip: {{ (switch_id - 1) * 2 }}
  mlag_peer_ip: {{ ((switch_id - 1) * 2) + 1 }}
  mlag_peer_id: {{ l2leaf.node_groups[l2leaf_node_group].nodes[loop.nextitem].id }}
  mlag_peer_mgmt_ip: {{ l2leaf.node_groups[l2leaf_node_group].nodes[loop.nextitem].mgmt_ip | ipaddr('address') }}
{%                 elif loop.index == 2 %}
  mlag_role: "secondary"
  mlag_peer: {{ loop.previtem }}
{%                     set mlag_peer_id = l2leaf.node_groups[l2leaf_node_group].nodes[loop.previtem].id %}
  mlag_ip: {{ ((mlag_peer_id - 1) * 2) + 1 }}
  mlag_peer_ip: {{ (mlag_peer_id -1) * 2 }}
  mlag_peer_id: {{ mlag_peer_id }}
  mlag_peer_mgmt_ip: {{ l2leaf.node_groups[l2leaf_node_group].nodes[loop.previtem].mgmt_ip | ipaddr('address') }}
{%                 endif %}
{%             else %}
  mlag: false
{%             endif %}

{# switch.vrfs, switch.svis and switch.vlans #}
{# get allowed vrfs, svis and vlans from parent L3 Leafs #}
{% set parentl3leaf = namespace() %}
{% for l3leaf_node_group in l3leaf.node_groups | arista.avd.natural_sort %}
{%     for node in l3leaf.node_groups[l3leaf_node_group].nodes | arista.avd.natural_sort %}
{%         if node == switch_parent_l3leafs[0] %}
{%             set parentl3leaf.group = l3leaf_node_group %}
{%             if l3leaf.node_groups[l3leaf_node_group].filter.tenants is defined %}
{%                 set parentl3leaf.filter_tenants = l3leaf.node_groups[l3leaf_node_group].filter.tenants %}
{%             else %}
{%                 set parentl3leaf.filter_tenants = [ 'all' ] %}
{%             endif %}
{%             if l3leaf.node_groups[l3leaf_node_group].filter.tags is defined %}
{%                 set parentl3leaf.filter_tags = l3leaf.node_groups[l3leaf_node_group].filter.tags %}
{%             else %}
{%                 set parentl3leaf.filter_tags = [ 'all' ] %}
{%             endif %}
{%         endif %}
{%     endfor %}
{% endfor %}
{# set leaf allowed vrfs, svis and vlans #}
{% set leaf = namespace() %}
{% set leaf.vrfs = []  %}
{% set leaf.svis = []  %}
{% set leaf.vlans = []  %}
{% for tenant in tenants | arista.avd.natural_sort if tenant in switch_filter_tenants or "all" in switch_filter_tenants %}
{%     if tenant in parentl3leaf.filter_tenants or "all" in parentl3leaf.filter_tenants %}
{%         if tenants[tenant].vrfs is defined %}
{%             for vrf in tenants[tenant].vrfs | arista.avd.natural_sort %}
{%                 for svi in tenants[tenant].vrfs[vrf].svis | arista.avd.natural_sort %}
{%                     for svi_tag in tenants[tenant].vrfs[vrf].svis[svi].tags %}
{%                         if svi_tag in switch_filter_tags or svi_tag == l2leaf_node_group or "all" in switch_filter_tags %}
{%                             if svi_tag in parentl3leaf.filter_tags or svi_tag == parentl3leaf.group or "all" in parentl3leaf.filter_tags %}
{%                                 do leaf.vrfs.append( vrf ) %}
{%                                 do leaf.svis.append( svi | int) %}
{%                                 do leaf.vlans.append( svi| int ) %}
{%                                 break %}
{%                             endif %}
{%                         endif %}
{%                     endfor %}
{%                 endfor %}
{%             endfor %}
{%         endif %}
{%         if tenants[tenant].l2vlans is defined %}
{%             for l2vlan in tenants[tenant].l2vlans | arista.avd.natural_sort %}
{%                 for vlan_tag in tenants[tenant].l2vlans[l2vlan].tags %}
{%                     if vlan_tag in switch_filter_tags or vlan_tag == l2leaf_node_group or "all" in switch_filter_tags %}
{%                         if vlan_tag in parentl3leaf.filter_tags or vlan_tag == l2leaf_node_group or "all" in parentl3leaf.filter_tags %}
{%                             do leaf.vlans.append( l2vlan | int) %}
{%                             break %}
{%                         endif %}
{%                     endif %}
{%                 endfor %}
{%             endfor %}
{%         endif %}
{%     endif %}
{% endfor %}
  vrfs: {{ leaf.vrfs | unique }}
  svis: {{ leaf.svis | unique }}
  vlans: {{ leaf.vlans | unique }}

{%             break %}
{%         endif %}
{%     endfor %}
{% endfor %}
